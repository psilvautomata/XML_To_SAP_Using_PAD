    **REGION SteelPlant1
    **REGION DataInícioSteelPlant1
    Display.SelectDateDialog.SelectDateRange Title: $'''Data SteelPlant1''' Message: $'''Insira a Data Dos Arquivos XML SteelPlant1:''' DateDialogFormat: Display.DateDialogFormat.DateOnly DefaultValue: CurrentDateTime IsTopMost: False SelectedDate=> Data1 SecondSelectedDate=> Data2 ButtonPressed=> ButtonPressed
    IF ButtonPressed = $'''Cancel''' THEN
        EXIT Code: 0
    END
    Text.ConvertDateTimeToText.FromDateTime DateTime: Data1 StandardFormat: Text.WellKnownDateTimeFormat.ShortDate Result=> Conversao1
    Text.GetSubtext.GetSubtextFromStartTo Text: Conversao1 NumberOfChars: 2 Subtext=> Dia1
    Text.GetSubtext.GetSubtext Text: Conversao1 CharacterPosition: 3 NumberOfChars: 2 Subtext=> Mes1
    Text.GetSubtext.GetSubtext Text: Conversao1 CharacterPosition: 6 NumberOfChars: 4 Subtext=> Ano1
    Text.JoinText.Join List: $'''%Ano1%%Mes1%%Dia1%''' Result=> DataFormatada1
    Text.ToNumber Text: Dia1 Number=> DiaFormatada1
    Text.ToNumber Text: DataFormatada1 Number=> NumDataFormatada1
    **ENDREGION
    **REGION DataFimSteelPlant1
    Text.ConvertDateTimeToText.FromDateTime DateTime: Data2 StandardFormat: Text.WellKnownDateTimeFormat.ShortDate Result=> Conversao2
    Text.GetSubtext.GetSubtextFromStartTo Text: Conversao2 NumberOfChars: 2 Subtext=> Dia2
    Text.GetSubtext.GetSubtext Text: Conversao2 CharacterPosition: 3 NumberOfChars: 2 Subtext=> Mes2
    Text.GetSubtext.GetSubtext Text: Conversao2 CharacterPosition: 6 NumberOfChars: 4 Subtext=> Ano2
    Text.JoinText.Join List: $'''%Ano2%%Mes2%%Dia2%''' Result=> DataFormatada2
    Text.ToNumber Text: DataFormatada2 Number=> NumDataFormatada2
    **ENDREGION
    **REGION ExcelSteelPlant1
    Excel.LaunchExcel.LaunchAndOpenUnderExistingProcess Path: $'''C:\\Users\\youruser\\yourpath\\DataCom.xlsm''' Visible: False ReadOnly: False Instance=> ExcelInstance
    Excel.FindAndReplace.FindSingle Instance: ExcelInstance TextToFind: Conversao1 MatchCase: False MatchEntireCellContents: True SearchBy: Excel.SearchOrder.Rows FoundColumnIndex=> ColunaData1 FoundRowIndex=> LinhaData1
    Excel.FindAndReplace.FindSingle Instance: ExcelInstance TextToFind: Conversao2 MatchCase: False MatchEntireCellContents: True SearchBy: Excel.SearchOrder.Rows FoundColumnIndex=> ColunaData2 FoundRowIndex=> LinhaData2
    LOOP LinhaLoop FROM LinhaData1 TO LinhaData2 STEP 1
        Excel.ReadFromExcel.ReadCell Instance: ExcelInstance StartColumn: 3 StartRow: LinhaLoop ReadAsText: True CellValue=> DataValor
        Outlook.RetrieveEmailMessages.RetrieveEmailsAndSaveAttachments Instance: OutlookInstance Account: $'''yourmailadress''' MailFolder: $'''Yourmailfolder''' EmailsToRetrieve: Outlook.RetrieveMessagesMode.All MarkAsRead: True ReadBodyAsHtml: False SubjectContains: DataValor SaveAttachmentsInto: $'''C:\\Users\\youruser\\yourpath\\SteelPlant1''' Messages=> RetrievedEmails
    END
    Excel.CloseExcel.Close Instance: ExcelInstance
    **ENDREGION
    **REGION VerificadorDeArquivosSteelPlant1
    SAP.SapLogin.SapLogInOptionSingle Description: $'''SAP Region''' Client: 'Client' Username: $'''user''' Password: P'password' Language: $'''PT''' SapInstance=> SapInstance OtherSapLoginTerminated=> OtherSapLoginTerminated
    WAIT (UIAutomation.WaitForImage.ToAppearOnScreen Images: [imgrepo['SAP System']] FindAllImages: False Tolerance: 10 SearchAlgorithm: UIAutomation.ImageFinderAlgorithm.Legacy) FOR 5 
    ON ERROR

    END
    @@source: 'Recorder'
    MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: '{Return}'
    WAIT 2
    SAP.StartTransaction SapInstance: SapInstance TransactionCode: $'''SAP Transaction'''
    Folder.GetFiles Folder: $'''C:\\Users\\youruser\\yourpath\\SteelPlant1''' FileFilter: $'''*''' IncludeSubfolders: False FailOnAccessDenied: True SortBy1: Folder.SortBy.NoSort SortDescending1: False SortBy2: Folder.SortBy.NoSort SortDescending2: False SortBy3: Folder.SortBy.NoSort SortDescending3: False Files=> ArquivosNaPasta
    IF IsEmpty(ArquivosNaPasta) THEN
        GOTO 'Região SteelPlant2'
    END
    **ENDREGION
    **REGION Iniciar SAP
    UIAutomation.FocusWindow.Focus Window: appmask['Window' / 'Window']
    Clipboard.SetText Text: $'''C:\\Users\\youruser\\yourpath\\SteelPlant1'''
    MouseAndKeyboard.MoveMouseToImage.ClickImage Images: [imgrepo['Origem']] SearchForImageOn: MouseAndKeyboard.SearchTarget.EntireScreen MousePositionOnImage: MouseAndKeyboard.PositionOnImage.MiddleCenter OffsetX: 0 OffsetY: 0 Tolerance: 10 MovementStyle: MouseAndKeyboard.MovementStyle.Instant Occurence: 1 Timeout: 5 ClickType: MouseAndKeyboard.ClickType.LeftClick SecondsBeforeClick: 0 SearchAlgorithm: MouseAndKeyboard.ImageFinderAlgorithm.Legacy
    MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''{Tab}''' DelayBetweenKeystrokes: 10 SendTextAsHardwareKeys: False
    MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''{Control}({V})''' DelayBetweenKeystrokes: 2 SendTextAsHardwareKeys: False
    WAIT 2
    Clipboard.SetText Text: $'''C:\\Users\\youruser\\yourpath'''
    MouseAndKeyboard.MoveMouseToImage.ClickImage Images: [imgrepo['Backup']] SearchForImageOn: MouseAndKeyboard.SearchTarget.EntireScreen MousePositionOnImage: MouseAndKeyboard.PositionOnImage.MiddleCenter OffsetX: 0 OffsetY: 0 Tolerance: 10 MovementStyle: MouseAndKeyboard.MovementStyle.Instant Occurence: 1 Timeout: 5 ClickType: MouseAndKeyboard.ClickType.LeftClick SecondsBeforeClick: 0 SearchAlgorithm: MouseAndKeyboard.ImageFinderAlgorithm.Legacy
    MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''{Tab}''' DelayBetweenKeystrokes: 10 SendTextAsHardwareKeys: False
    MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''{Control}({V})''' DelayBetweenKeystrokes: 2 SendTextAsHardwareKeys: False
    WAIT 2
    MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''{F8}''' DelayBetweenKeystrokes: 2 SendTextAsHardwareKeys: False
    **ENDREGION
    **ENDREGION
    WAIT (UIAutomation.WaitForImage.ToAppearOnScreen Images: [imgrepo['Maiuscula']] FindAllImages: False Tolerance: 4 SearchAlgorithm: UIAutomation.ImageFinderAlgorithm.Legacy)
    **REGION SteelPlant2
    LABEL 'SteelPlant2'
    **REGION Baixar na Pasta
    Outlook.RetrieveEmailMessages.RetrieveEmailsAndSaveAttachments Instance: OutlookInstance Account: $"yourmailadress" MailFolder: $"yourmailfolder" EmailsToRetrieve: Outlook.RetrieveMessagesMode.All MarkAsRead: True ReadBodyAsHtml: False SaveAttachmentsInto: $"C:\\Users\\youruser\\yourpath" Messages=> RetrievedEmails
    WAIT 1
    MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''{LWin}({R})''' DelayBetweenKeystrokes: 10 SendTextAsHardwareKeys: False
    WAIT 1
    UIAutomation.FocusWindow.Focus Window: appmask['Window \'Executar\'']
    @@source: 'Recorder'
MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: 'x{Back}cmd'
    @@source: 'Recorder'
MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: '{Return}'
    WAIT 1
    Clipboard.SetText Text: $"cd C:\\Users\\youruser\\yourpath"
    @@source: 'Recorder'
MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: '{LControlKey}({V})'
    @@source: 'Recorder'
MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: '{Return}'
    WAIT 1
    Clipboard.SetText Text: $'''dir /ad /a > info_arquivos.txt
'''
    @@source: 'Recorder'
MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: '{LControlKey}({V})'
    @@source: 'Recorder'
MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: '{Return}'
    WAIT 1
    UIAutomation.CloseWindow.Close Window: appmask['Window \'C:\\Windows\\system32\\cmd.exe\'']['Document \'Text Area\'']
    WAIT 1
    SET NomeArquivo TO $'''info_arquivos.txt'''
    File.ReadTextFromFile.ReadText File: $'''C:\\Users\\youruser\\yourpath\\%NomeArquivo%''' Encoding: File.TextFileEncoding.UTF8 Content=> TextoArquivo
    Clipboard.SetText Text: TextoArquivo
    **ENDREGION
    **REGION Importação Excel
    Excel.LaunchExcel.LaunchAndOpenUnderExistingProcess Path: $'''C:\\Users\\youruser\\yourpath\\lista_itens.xlsm''' Visible: True ReadOnly: False Instance=> ExcelInstance
    UIAutomation.FocusWindow.FocusByTitleClass Title: $'''lista_itens - Excel''' Class: $'''XLMAIN'''
    UIAutomation.SetWindowState.SetStateByTitleClass Title: $'''lista_itens - Excel''' Class: $'''XLMAIN''' State: UIAutomation.WindowState.Maximized
    Excel.RunMacro Instance: ExcelInstance Macro: $'''Tratar_Dados'''
    WAIT 2
    **ENDREGION
    **REGION Controle Por Datas
    Text.ConvertDateTimeToText.FromDateTime DateTime: Data1 StandardFormat: Text.WellKnownDateTimeFormat.ShortDate Result=> Conversao1
    Text.ConvertDateTimeToText.FromDateTime DateTime: Data2 StandardFormat: Text.WellKnownDateTimeFormat.ShortDate Result=> Conversao2
    Excel.FindAndReplace.FindSingle Instance: ExcelInstance TextToFind: Conversao1 MatchCase: False MatchEntireCellContents: True SearchBy: Excel.SearchOrder.Rows FoundColumnIndex=> ColunaData1 FoundRowIndex=> LinhaData1
    Excel.FindAndReplace.FindSingle Instance: ExcelInstance TextToFind: Conversao2 MatchCase: False MatchEntireCellContents: True SearchBy: Excel.SearchOrder.Rows FoundColumnIndex=> ColunaData2 FoundRowIndex=> LinhaData2
    **ENDREGION
    **REGION SEERRO - Controle Por Datas
    LOOP WHILE (LinhaData1) = (0)
        Display.ShowMessageDialog.ShowMessage Title: $'''Não Foram Encontradas Correspondências''' Message: $'''Subescrito Fora do Intervalo - Insira DATA INICIAL novamente.''' Icon: Display.Icon.Warning Buttons: Display.Buttons.OK DefaultButton: Display.DefaultButton.Button1 IsTopMost: False
        Display.SelectDateDialog.SelectDateRange Title: $'''Data Desejada''' Message: $'''Insira a Data Dos Arquivos XML:''' DateDialogFormat: Display.DateDialogFormat.DateOnly DefaultValue: CurrentDateTime IsTopMost: False SelectedDate=> Data1 SecondSelectedDate=> Data2 ButtonPressed=> ButtonPressed
        IF ButtonPressed = $'''Cancel''' THEN
            EXIT Code: 0
        END
        Text.ConvertDateTimeToText.FromDateTime DateTime: Data1 StandardFormat: Text.WellKnownDateTimeFormat.ShortDate Result=> Conversao1
        Excel.FindAndReplace.FindSingle Instance: ExcelInstance TextToFind: Conversao1 MatchCase: False MatchEntireCellContents: True SearchBy: Excel.SearchOrder.Rows FoundColumnIndex=> ColunaData1 FoundRowIndex=> LinhaData1
    END
    LOOP WHILE (LinhaData2) = (0)
        Display.ShowMessageDialog.ShowMessage Title: $'''Não Foram Encontradas Correspondências''' Message: $'''Subescrito Fora do Intervalo - Insira DATA FINAL 
novamente.''' Icon: Display.Icon.Warning Buttons: Display.Buttons.OK DefaultButton: Display.DefaultButton.Button1 IsTopMost: False
        Display.SelectDateDialog.SelectDateRange Title: $'''Data Desejada''' Message: $'''Insira a Data Dos Arquivos XML:''' DateDialogFormat: Display.DateDialogFormat.DateOnly DefaultValue: CurrentDateTime IsTopMost: False SelectedDate=> Data1 SecondSelectedDate=> Data2 ButtonPressed=> ButtonPressed
        IF ButtonPressed = $'''Cancel''' THEN
            EXIT Code: 0
        END
        Text.ConvertDateTimeToText.FromDateTime DateTime: Data2 StandardFormat: Text.WellKnownDateTimeFormat.ShortDate Result=> Conversao2
        Excel.FindAndReplace.FindSingle Instance: ExcelInstance TextToFind: Conversao2 MatchCase: False MatchEntireCellContents: True SearchBy: Excel.SearchOrder.Rows FoundColumnIndex=> ColunaData2 FoundRowIndex=> LinhaData2
    END
    **ENDREGION
    LOOP LinhaLoop FROM LinhaData1 TO LinhaData2 STEP 1
        Excel.ReadFromExcel.ReadCell Instance: ExcelInstance StartColumn: 2 StartRow: LinhaLoop ReadAsText: True CellValue=> DataValor
        IF IsEmpty(DataValor) THEN
            NEXT LOOP
        END
        IF EndsWith(DataValor, $'''.XML''', True) THEN
            File.Move Files: $"C:\\Users\\youruser\\yourpath\\%DataValor%" Destination: $"C:\\Users\\youruser\\yourpath" IfFileExists: File.IfExists.Overwrite MovedFiles=> MovedValue
            ON ERROR MoveFileError
                REPEAT ACTION
            END
        END
    END
    Folder.GetFiles Folder: $"C:\\Users\\youruser\\yourpath\\Temp" FileFilter: $'''*''' IncludeSubfolders: False FailOnAccessDenied: True SortBy1: Folder.SortBy.NoSort SortDescending1: False SortBy2: Folder.SortBy.NoSort SortDescending2: False SortBy3: Folder.SortBy.NoSort SortDescending3: False Files=> ArquivosNaPasta
    IF IsEmpty(ArquivosNaPasta) THEN
        GOTO 'Região SteelPlant3'
    END
    **REGION Iniciar SAP
    UIAutomation.FocusWindow.Focus Window: appmask['Window' / 'Window']
    Clipboard.SetText Text: $"C:\\Users\\youruser\\yourpath\\Temp"
    MouseAndKeyboard.MoveMouseToImage.ClickImage Images: [imgrepo['Origem']] SearchForImageOn: MouseAndKeyboard.SearchTarget.EntireScreen MousePositionOnImage: MouseAndKeyboard.PositionOnImage.MiddleCenter OffsetX: 0 OffsetY: 0 Tolerance: 10 MovementStyle: MouseAndKeyboard.MovementStyle.Instant Occurence: 1 Timeout: 5 ClickType: MouseAndKeyboard.ClickType.LeftClick SecondsBeforeClick: 0 SearchAlgorithm: MouseAndKeyboard.ImageFinderAlgorithm.Legacy
    MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''{Tab}''' DelayBetweenKeystrokes: 10 SendTextAsHardwareKeys: False
    MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''{Control}({V})''' DelayBetweenKeystrokes: 2 SendTextAsHardwareKeys: False
    WAIT 2
    Clipboard.SetText Text: $"C:\\Users\\youruser\\yourpath"
    MouseAndKeyboard.MoveMouseToImage.ClickImage Images: [imgrepo['Backup']] SearchForImageOn: MouseAndKeyboard.SearchTarget.EntireScreen MousePositionOnImage: MouseAndKeyboard.PositionOnImage.MiddleCenter OffsetX: 0 OffsetY: 0 Tolerance: 10 MovementStyle: MouseAndKeyboard.MovementStyle.Instant Occurence: 1 Timeout: 5 ClickType: MouseAndKeyboard.ClickType.LeftClick SecondsBeforeClick: 0 SearchAlgorithm: MouseAndKeyboard.ImageFinderAlgorithm.Legacy
    MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''{Tab}''' DelayBetweenKeystrokes: 10 SendTextAsHardwareKeys: False
    MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''{Control}({V})''' DelayBetweenKeystrokes: 2 SendTextAsHardwareKeys: False
    WAIT 2
    MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''{F8}''' DelayBetweenKeystrokes: 2 SendTextAsHardwareKeys: False
    **ENDREGION
    Folder.Empty Folder: $"C:\\Users\\youruser\\yourpath"
    Excel.CloseExcel.Close Instance: ExcelInstance
    **ENDREGION
    WAIT (UIAutomation.WaitForImage.ToAppearOnScreen Images: [imgrepo['XML']] FindAllImages: False Tolerance: 4 SearchAlgorithm: UIAutomation.ImageFinderAlgorithm.Legacy)
    **REGION SteelPlant3
    LABEL 'Região SteelPlant3'
    Excel.LaunchExcel.LaunchAndOpenUnderExistingProcess Path: $'''C:\\Users\\youruser\\yourpath\\DataCom.xlsm''' Visible: False ReadOnly: False Instance=> ExcelInstance
    Excel.FindAndReplace.FindSingle Instance: ExcelInstance TextToFind: Conversao1 MatchCase: False MatchEntireCellContents: True SearchBy: Excel.SearchOrder.Rows FoundColumnIndex=> ColunaData1 FoundRowIndex=> LinhaData1
    Excel.FindAndReplace.FindSingle Instance: ExcelInstance TextToFind: Conversao2 MatchCase: False MatchEntireCellContents: True SearchBy: Excel.SearchOrder.Rows FoundColumnIndex=> ColunaData2 FoundRowIndex=> LinhaData2
    LOOP LinhaLoop FROM LinhaData1 TO LinhaData2 STEP 1
        Excel.ReadFromExcel.ReadCell Instance: ExcelInstance StartColumn: 4 StartRow: LinhaLoop ReadAsText: True CellValue=> DataValor
        Outlook.RetrieveEmailMessages.RetrieveEmailsAndSaveAttachments Instance: OutlookInstance Account: $'''youmailadress''' MailFolder: $'''yourmailfolder''' EmailsToRetrieve: Outlook.RetrieveMessagesMode.All MarkAsRead: True ReadBodyAsHtml: False SubjectContains: DataValor SaveAttachmentsInto: $'''C:\\Users\\youruser\\yourpath\\SteelPlant3''' Messages=> RetrievedEmails
    END
    Excel.CloseExcel.Close Instance: ExcelInstance
    Folder.GetFiles Folder: $"C:\\Users\\youruser\\yourpath" FileFilter: $'''*''' IncludeSubfolders: False FailOnAccessDenied: True SortBy1: Folder.SortBy.NoSort SortDescending1: False SortBy2: Folder.SortBy.NoSort SortDescending2: False SortBy3: Folder.SortBy.NoSort SortDescending3: False Files=> ArquivosNaPasta
    IF IsEmpty(ArquivosNaPasta) THEN
        GOTO 'Final do Fluxo'
    END
    **REGION Iniciar SAP SteePlant3
    UIAutomation.FocusWindow.Focus Window: appmask['Window' / 'Window']
    Clipboard.SetText Text: $"C:\\Users\\youruser\\yourpath"
    MouseAndKeyboard.MoveMouseToImage.ClickImage Images: [imgrepo['Origem']] SearchForImageOn: MouseAndKeyboard.SearchTarget.EntireScreen MousePositionOnImage: MouseAndKeyboard.PositionOnImage.MiddleCenter OffsetX: 0 OffsetY: 0 Tolerance: 10 MovementStyle: MouseAndKeyboard.MovementStyle.Instant Occurence: 1 Timeout: 5 ClickType: MouseAndKeyboard.ClickType.LeftClick SecondsBeforeClick: 0 SearchAlgorithm: MouseAndKeyboard.ImageFinderAlgorithm.Legacy
    MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''{Tab}''' DelayBetweenKeystrokes: 10 SendTextAsHardwareKeys: False
    MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''{Control}({V})''' DelayBetweenKeystrokes: 2 SendTextAsHardwareKeys: False
    WAIT 2
    Clipboard.SetText Text: $"C:\\Users\\youruser\\yourpath"
    MouseAndKeyboard.MoveMouseToImage.ClickImage Images: [imgrepo['Backup']] SearchForImageOn: MouseAndKeyboard.SearchTarget.EntireScreen MousePositionOnImage: MouseAndKeyboard.PositionOnImage.MiddleCenter OffsetX: 0 OffsetY: 0 Tolerance: 10 MovementStyle: MouseAndKeyboard.MovementStyle.Instant Occurence: 1 Timeout: 5 ClickType: MouseAndKeyboard.ClickType.LeftClick SecondsBeforeClick: 0 SearchAlgorithm: MouseAndKeyboard.ImageFinderAlgorithm.Legacy
    MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''{Tab}''' DelayBetweenKeystrokes: 10 SendTextAsHardwareKeys: False
    MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''{Control}({V})''' DelayBetweenKeystrokes: 2 SendTextAsHardwareKeys: False
    WAIT 2
    MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''{F8}''' DelayBetweenKeystrokes: 2 SendTextAsHardwareKeys: False
    **ENDREGION
    **ENDREGION
    LABEL 'Final do Fluxo'
